import nextcord
from nextcord.ext import commands
from nextcord import Interaction, SlashOption
from nextcord.utils import Object
import sqlite3
import os
from flask import Flask
import threading

intents = nextcord.Intents.default()
intents.message_content = True
bot = commands.Bot(command_prefix="!", intents=intents)
GUILD_ID = 1386301748062453811

class ConfirmView(nextcord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @nextcord.ui.button(label="‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô", style=nextcord.ButtonStyle.green)
    async def confirm(self, button: nextcord.ui.Button, interaction: nextcord.Interaction):
        await interaction.response.send_message("‚úÖ ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
        await interaction.user.send("üéâ ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß!")

    @nextcord.ui.button(label="‚ùå ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò", style=nextcord.ButtonStyle.red)
    async def deny(self, button: nextcord.ui.Button, interaction: nextcord.Interaction):
        await interaction.response.send_message("‚ùå ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢", ephemeral=True)
        await interaction.user.send("‚ùå ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò")

@bot.event
async def on_ready():
    print(f"‚úÖ Logged in as {bot.user}")
    try:
        synced = await bot.tree.sync(guild=Object(id=GUILD_ID))
        print(f"‚úÖ Synced {len(synced)} commands")
    except Exception as e:
        print(f"‚ùå Sync failed: {e}")

@bot.tree.command(name="order", description="‡∏™‡πà‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå", guild=Object(id=GUILD_ID))
async def order(interaction: Interaction, ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£: str = SlashOption(description="‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå")):
    conn = sqlite3.connect("orders.db")
    c = conn.cursor()
    c.execute("CREATE TABLE IF NOT EXISTS orders (id INTEGER PRIMARY KEY AUTOINCREMENT, user TEXT, detail TEXT)")
    c.execute("INSERT INTO orders (user, detail) VALUES (?, ?)", (str(interaction.user), ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£))
    conn.commit()
    conn.close()

    await interaction.response.send_message("üì¶ ‡∏™‡πà‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ ‡∏£‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏à‡∏≤‡∏Å‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô", ephemeral=True)

    admin_channel = bot.get_channel(1386302028858523668)  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô channel ID ‡∏à‡∏£‡∏¥‡∏á
    if admin_channel:
        await admin_channel.send(
            f"üì• ‡∏°‡∏µ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å {interaction.user.mention}:
```{‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£}```",
            view=ConfirmView()
        )

# Web Admin
app = Flask(__name__)

@app.route("/")
def home():
    return "‚úÖ Admin Web ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"

def run_web():
    app.run(host="0.0.0.0", port=10000)

if __name__ == "__main__":
    threading.Thread(target=run_web).start()
    bot.run("MTM4NjMwMTY1MTg4NjkzNjEyNQ.G9mnli.T_-H-ftS4RRrA4uLWqKqX-h7hew-NihlgJhcSk")
